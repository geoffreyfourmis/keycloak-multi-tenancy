---
openapi: 3.0.3
info:
  title: Keycloak Multi-Tenancy
  version: 23.2.1
servers:
- url: "{{keycloakUrl}}/auth/realms/{{realmName}}"
paths:
  /tenants:
    get:
      summary: List tenants
      operationId: listTenants
      parameters:
      - name: first
        in: query
        description: Pagination offset
        schema:
          format: int32
          type: integer
      - name: max
        in: query
        description: Maximum results size (defaults to 100)
        schema:
          format: int32
          type: integer
      - name: search
        in: query
        description: Tenant name
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TenantRepresentation'
        "401":
          description: Unauthorized
    post:
      summary: Create a tenant
      operationId: createTenant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantRepresentation'
        required: true
      responses:
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  /tenants/{tenantId}:
    get:
      summary: Get tenant
      operationId: getTenant
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                required:
                - name
                type: object
                properties:
                  id:
                    type: string
                    readOnly: true
                  name:
                    type: string
                  realm:
                    type: string
                    readOnly: true
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    put:
      summary: Update tenant
      operationId: updateTenant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantRepresentation'
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    delete:
      summary: Delete tenant
      operationId: deleteTenant
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
    parameters:
    - name: tenantId
      in: path
      required: true
      schema:
        type: string
  /tenants/{tenantId}/invitations:
    get:
      summary: List invitations
      operationId: listInvitations
      parameters:
      - name: first
        in: query
        description: Pagination offset
        schema:
          format: int32
          type: integer
      - name: max
        in: query
        description: Maximum results size (defaults to 100)
        schema:
          format: int32
          type: integer
      - name: search
        in: query
        description: Invitee email
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TenantInvitationRepresentation'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
    post:
      summary: Create invitation
      operationId: createInvitation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantInvitationRepresentation'
        required: true
      responses:
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
    parameters:
    - name: tenantId
      in: path
      required: true
      schema:
        type: string
  /tenants/{tenantId}/invitations/{invitationId}:
    delete:
      summary: Revoke invitation
      operationId: revokeInvitation
      parameters:
      - name: invitationId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    parameters:
    - name: tenantId
      in: path
      required: true
      schema:
        type: string
  /tenants/{tenantId}/memberships:
    get:
      summary: List tenant memberships
      operationId: listMemberships
      parameters:
      - name: first
        in: query
        description: Pagination offset
        schema:
          format: int32
          type: integer
      - name: max
        in: query
        description: Maximum results size (defaults to 100)
        schema:
          format: int32
          type: integer
      - name: search
        in: query
        description: Member email
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TenantMembershipRepresentation'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
    parameters:
    - name: tenantId
      in: path
      required: true
      schema:
        type: string
  /tenants/{tenantId}/memberships/{membershipId}:
    delete:
      summary: Revoke tenant membership
      operationId: revokeMembership
      parameters:
      - name: membershipId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    patch:
      summary: Update tenant membership
      operationId: updateMembership
      parameters:
      - name: membershipId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantMembershipRepresentation'
        required: true
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    parameters:
    - name: tenantId
      in: path
      required: true
      schema:
        type: string
components:
  schemas:
    CredentialRepresentation:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        userLabel:
          type: string
        createdDate:
          format: int64
          type: integer
        secretData:
          type: string
        credentialData:
          type: string
        priority:
          format: int32
          type: integer
        value:
          type: string
        temporary:
          type: boolean
        device:
          type: string
          deprecated: true
        hashedSaltedValue:
          type: string
          deprecated: true
        salt:
          type: string
          deprecated: true
        hashIterations:
          format: int32
          type: integer
          deprecated: true
        counter:
          format: int32
          type: integer
          deprecated: true
        algorithm:
          type: string
          deprecated: true
        digits:
          format: int32
          type: integer
          deprecated: true
        period:
          format: int32
          type: integer
          deprecated: true
        config:
          type: object
          additionalProperties:
            type: string
          deprecated: true
    FederatedIdentityRepresentation:
      type: object
      properties:
        identityProvider:
          type: string
        userId:
          type: string
        userName:
          type: string
    SocialLinkRepresentation:
      type: object
      properties:
        socialProvider:
          type: string
        socialUserId:
          type: string
        socialUsername:
          type: string
    TenantInvitationRepresentation:
      required:
      - email
      - roles
      type: object
      properties:
        id:
          type: string
          readOnly: true
        tenantId:
          type: string
          readOnly: true
        email:
          type: string
        emailInvitationUri:
          type: string
        locale:
          type: string
        roles:
          uniqueItems: true
          type: array
          items:
            type: string
        invitedBy:
          type: string
          readOnly: true
    TenantMembershipRepresentation:
      required:
      - roles
      type: object
      properties:
        id:
          type: string
          readOnly: true
        user:
          description: "Returns basic user info only including id, username, creation\
            \ date, names, email, enabled state, email verification and federation\
            \ link."
          type: object
          allOf:
          - $ref: '#/components/schemas/UserRepresentation'
          readOnly: true
        roles:
          uniqueItems: true
          type: array
          items:
            type: string
    TenantRepresentation:
      required:
      - name
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        realm:
          type: string
          readOnly: true
    UserConsentRepresentation:
      type: object
      properties:
        clientId:
          type: string
        grantedClientScopes:
          type: array
          items:
            type: string
        createdDate:
          format: int64
          type: integer
        lastUpdatedDate:
          format: int64
          type: integer
        grantedRealmRoles:
          type: array
          items:
            type: string
          deprecated: true
    UserProfileAttributeGroupMetadata:
      type: object
      properties:
        name:
          type: string
        displayHeader:
          type: string
        displayDescription:
          type: string
        annotations:
          type: object
          additionalProperties: {}
    UserProfileAttributeMetadata:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        required:
          type: boolean
        readOnly:
          type: boolean
        annotations:
          type: object
          additionalProperties: {}
        validators:
          type: object
          additionalProperties:
            type: object
            additionalProperties: {}
        group:
          type: string
    UserProfileMetadata:
      type: object
      properties:
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/UserProfileAttributeMetadata'
        groups:
          type: array
          items:
            $ref: '#/components/schemas/UserProfileAttributeGroupMetadata'
    UserRepresentation:
      type: object
      properties:
        self:
          type: string
        id:
          type: string
        origin:
          type: string
        createdTimestamp:
          format: int64
          type: integer
        username:
          type: string
        enabled:
          type: boolean
        totp:
          type: boolean
        emailVerified:
          type: boolean
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        federationLink:
          type: string
        serviceAccountClientId:
          type: string
        attributes:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
        credentials:
          type: array
          items:
            $ref: '#/components/schemas/CredentialRepresentation'
        disableableCredentialTypes:
          uniqueItems: true
          type: array
          items:
            type: string
        requiredActions:
          type: array
          items:
            type: string
        federatedIdentities:
          type: array
          items:
            $ref: '#/components/schemas/FederatedIdentityRepresentation'
        realmRoles:
          type: array
          items:
            type: string
        clientRoles:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
        clientConsents:
          type: array
          items:
            $ref: '#/components/schemas/UserConsentRepresentation'
        notBefore:
          format: int32
          type: integer
        applicationRoles:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          deprecated: true
        socialLinks:
          type: array
          items:
            $ref: '#/components/schemas/SocialLinkRepresentation'
          deprecated: true
        groups:
          type: array
          items:
            type: string
        access:
          type: object
          additionalProperties:
            type: boolean
        userProfileMetadata:
          $ref: '#/components/schemas/UserProfileMetadata'
